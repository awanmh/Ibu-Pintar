{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-section\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nimport { ref, onMounted } from 'vue';\nimport ApiService from '@/services/ApiService';\nimport AnswerModal from '@/views/admin/AnswerModal.vue';\nexport default {\n  __name: 'ManageForum',\n  setup(__props) {\n    const questions = ref([]);\n    const loading = ref(false);\n    const error = ref(null);\n    const selectedQuestion = ref(null);\n    const fetchQuestions = async () => {\n      loading.value = true;\n      try {\n        const res = await ApiService.getAllQuestions();\n        questions.value = res.data;\n      } catch (err) {\n        error.value = 'Gagal memuat forum';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const deleteQuestion = async id => {\n      if (!confirm('Yakin ingin menghapus pertanyaan ini?')) return;\n      try {\n        await ApiService.deleteQuestion(id);\n        questions.value = questions.value.filter(q => q.id !== id);\n      } catch (err) {\n        alert('Gagal menghapus pertanyaan');\n      }\n    };\n    const openAnswerModal = question => {\n      selectedQuestion.value = question;\n    };\n    onMounted(fetchQuestions);\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Manajemen Forum (Tanya Bidan)\", -1)), loading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Memuat data...\")) : _createCommentVNode(\"\", true), error.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(error.value), 1)) : _createCommentVNode(\"\", true), questions.value.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Pertanyaan\"), _createElementVNode(\"th\", null, \"Penanya\"), _createElementVNode(\"th\", null, \"Aksi\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(questions.value, q => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: q.id\n        }, [_createElementVNode(\"td\", null, _toDisplayString(q.title), 1), _createElementVNode(\"td\", null, _toDisplayString(q.asker?.name || 'Anonim'), 1), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n          onClick: $event => openAnswerModal(q)\n        }, \"Jawab\", 8, _hoisted_5), _createElementVNode(\"button\", {\n          onClick: $event => deleteQuestion(q.id)\n        }, \"Hapus\", 8, _hoisted_6)])]);\n      }), 128))])])) : _createCommentVNode(\"\", true), selectedQuestion.value ? (_openBlock(), _createBlock(AnswerModal, {\n        key: 3,\n        question: selectedQuestion.value,\n        onClose: _cache[0] || (_cache[0] = $event => selectedQuestion.value = null),\n        onAnswered: fetchQuestions\n      }, null, 8, [\"question\"])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","ApiService","AnswerModal","questions","loading","error","selectedQuestion","fetchQuestions","value","res","getAllQuestions","data","err","deleteQuestion","id","confirm","filter","q","alert","openAnswerModal","question","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","length","_hoisted_4","_Fragment","_renderList","key","title","asker","name","onClick","$event","_hoisted_5","_hoisted_6","_createBlock","onClose","_cache","onAnswered"],"sources":["E:/ibuPintar/frontend/src/views/admin/ManageForum.vue","E:\\ibuPintar\\frontend\\src\\views\\admin\\ManageForum.vue"],"sourcesContent":["<!-- src/views/admin/ManageForum.vue -->\r\n<template>\r\n  <div class=\"admin-section\">\r\n    <h2>Manajemen Forum (Tanya Bidan)</h2>\r\n\r\n    <div v-if=\"loading\">Memuat data...</div>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <table v-if=\"questions.length\">\r\n      <thead>\r\n        <tr>\r\n          <th>Pertanyaan</th>\r\n          <th>Penanya</th>\r\n          <th>Aksi</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"q in questions\" :key=\"q.id\">\r\n          <td>{{ q.title }}</td>\r\n          <td>{{ q.asker?.name || 'Anonim' }}</td>\r\n          <td>\r\n            <button @click=\"openAnswerModal(q)\">Jawab</button>\r\n            <button @click=\"deleteQuestion(q.id)\">Hapus</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Komponen Modal Jawaban -->\r\n    <AnswerModal\r\n      v-if=\"selectedQuestion\"\r\n      :question=\"selectedQuestion\"\r\n      @close=\"selectedQuestion = null\"\r\n      @answered=\"fetchQuestions\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport ApiService from '@/services/ApiService';\r\nimport AnswerModal from '@/views/admin/AnswerModal.vue';\r\n\r\nconst questions = ref([]);\r\nconst loading = ref(false);\r\nconst error = ref(null);\r\nconst selectedQuestion = ref(null);\r\n\r\nconst fetchQuestions = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const res = await ApiService.getAllQuestions();\r\n    questions.value = res.data;\r\n  } catch (err) {\r\n    error.value = 'Gagal memuat forum';\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst deleteQuestion = async (id) => {\r\n  if (!confirm('Yakin ingin menghapus pertanyaan ini?')) return;\r\n  try {\r\n    await ApiService.deleteQuestion(id);\r\n    questions.value = questions.value.filter(q => q.id !== id);\r\n  } catch (err) {\r\n    alert('Gagal menghapus pertanyaan');\r\n  }\r\n};\r\n\r\nconst openAnswerModal = (question) => {\r\n  selectedQuestion.value = question;\r\n};\r\n\r\nonMounted(fetchQuestions);\r\n</script>\r\n\r\n<style scoped>\r\n.admin-section {\r\n  padding: 20px;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n.error {\r\n  color: red;\r\n  margin-bottom: 1em;\r\n}\r\n</style>\r\n","<!-- src/views/admin/ManageForum.vue -->\r\n<template>\r\n  <div class=\"admin-section\">\r\n    <h2>Manajemen Forum (Tanya Bidan)</h2>\r\n\r\n    <div v-if=\"loading\">Memuat data...</div>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <table v-if=\"questions.length\">\r\n      <thead>\r\n        <tr>\r\n          <th>Pertanyaan</th>\r\n          <th>Penanya</th>\r\n          <th>Aksi</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"q in questions\" :key=\"q.id\">\r\n          <td>{{ q.title }}</td>\r\n          <td>{{ q.asker?.name || 'Anonim' }}</td>\r\n          <td>\r\n            <button @click=\"openAnswerModal(q)\">Jawab</button>\r\n            <button @click=\"deleteQuestion(q.id)\">Hapus</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Komponen Modal Jawaban -->\r\n    <AnswerModal\r\n      v-if=\"selectedQuestion\"\r\n      :question=\"selectedQuestion\"\r\n      @close=\"selectedQuestion = null\"\r\n      @answered=\"fetchQuestions\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport ApiService from '@/services/ApiService';\r\nimport AnswerModal from '@/views/admin/AnswerModal.vue';\r\n\r\nconst questions = ref([]);\r\nconst loading = ref(false);\r\nconst error = ref(null);\r\nconst selectedQuestion = ref(null);\r\n\r\nconst fetchQuestions = async () => {\r\n  loading.value = true;\r\n  try {\r\n    const res = await ApiService.getAllQuestions();\r\n    questions.value = res.data;\r\n  } catch (err) {\r\n    error.value = 'Gagal memuat forum';\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst deleteQuestion = async (id) => {\r\n  if (!confirm('Yakin ingin menghapus pertanyaan ini?')) return;\r\n  try {\r\n    await ApiService.deleteQuestion(id);\r\n    questions.value = questions.value.filter(q => q.id !== id);\r\n  } catch (err) {\r\n    alert('Gagal menghapus pertanyaan');\r\n  }\r\n};\r\n\r\nconst openAnswerModal = (question) => {\r\n  selectedQuestion.value = question;\r\n};\r\n\r\nonMounted(fetchQuestions);\r\n</script>\r\n\r\n<style scoped>\r\n.admin-section {\r\n  padding: 20px;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n.error {\r\n  color: red;\r\n  margin-bottom: 1em;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}