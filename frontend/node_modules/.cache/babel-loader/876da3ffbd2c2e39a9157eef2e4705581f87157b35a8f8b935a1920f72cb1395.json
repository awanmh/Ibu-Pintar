{"ast":null,"code":"import ApiService from '@/services/ApiService';\nimport StorageService from '@/services/StorageService';\n\n// Ambil data awal dari localStorage secara aman\nconst user = StorageService.get('user');\nconst token = StorageService.get('token');\nconst state = {\n  user: user,\n  token: token,\n  status: 'idle' // idle | loading | success | error\n};\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  isAdmin: state => state.user && state.user.role === 'admin',\n  authStatus: state => state.status,\n  currentUser: state => state.user\n};\nconst actions = {\n  async register({\n    commit\n  }, userData) {\n    commit('SET_STATUS', 'loading');\n    try {\n      const response = await ApiService.register(userData);\n      const {\n        id,\n        name,\n        email,\n        role,\n        token\n      } = response.data;\n      if (!token || !id) throw new Error('Invalid registration response');\n      const userPayload = {\n        id,\n        name,\n        email,\n        role\n      };\n      StorageService.set('user', userPayload);\n      StorageService.set('token', token);\n      commit('AUTH_SUCCESS', {\n        user: userPayload,\n        token\n      });\n      return response;\n    } catch (error) {\n      commit('AUTH_ERROR');\n      StorageService.remove('user');\n      StorageService.remove('token');\n      throw error;\n    }\n  },\n  async login({\n    commit\n  }, userData) {\n    commit('SET_STATUS', 'loading');\n    try {\n      const response = await ApiService.login(userData);\n      const {\n        id,\n        name,\n        email,\n        role,\n        token\n      } = response.data;\n      if (!token || !id) throw new Error('Invalid login response');\n      const userPayload = {\n        id,\n        name,\n        email,\n        role\n      };\n      StorageService.set('user', userPayload);\n      StorageService.set('token', token);\n      commit('AUTH_SUCCESS', {\n        user: userPayload,\n        token\n      });\n      return response;\n    } catch (error) {\n      commit('AUTH_ERROR');\n      StorageService.remove('user');\n      StorageService.remove('token');\n      throw error;\n    }\n  },\n  logout({\n    commit\n  }) {\n    commit('LOGOUT');\n    StorageService.remove('user');\n    StorageService.remove('token');\n  }\n};\nconst mutations = {\n  SET_STATUS(state, status) {\n    state.status = status;\n  },\n  AUTH_SUCCESS(state, {\n    user,\n    token\n  }) {\n    state.status = 'success';\n    state.user = user;\n    state.token = token;\n  },\n  AUTH_ERROR(state) {\n    state.status = 'error';\n    state.user = null;\n    state.token = null;\n  },\n  LOGOUT(state) {\n    state.status = 'idle';\n    state.user = null;\n    state.token = null;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["ApiService","StorageService","user","get","token","state","status","getters","isLoggedIn","isAdmin","role","authStatus","currentUser","actions","register","commit","userData","response","id","name","email","data","Error","userPayload","set","error","remove","login","logout","mutations","SET_STATUS","AUTH_SUCCESS","AUTH_ERROR","LOGOUT","namespaced"],"sources":["E:/ibuPintar/frontend/src/store/modules/auth.js"],"sourcesContent":["import ApiService from '@/services/ApiService';\r\nimport StorageService from '@/services/StorageService';\r\n\r\n// Ambil data awal dari localStorage secara aman\r\nconst user = StorageService.get('user');\r\nconst token = StorageService.get('token');\r\n\r\nconst state = {\r\n  user: user,\r\n  token: token,\r\n  status: 'idle', // idle | loading | success | error\r\n};\r\n\r\nconst getters = {\r\n  isLoggedIn: state => !!state.token,\r\n  isAdmin: state => state.user && state.user.role === 'admin',\r\n  authStatus: state => state.status,\r\n  currentUser: state => state.user,\r\n};\r\n\r\nconst actions = {\r\n  async register({ commit }, userData) {\r\n    commit('SET_STATUS', 'loading');\r\n    try {\r\n      const response = await ApiService.register(userData);\r\n      const { id, name, email, role, token } = response.data;\r\n\r\n      if (!token || !id) throw new Error('Invalid registration response');\r\n\r\n      const userPayload = { id, name, email, role };\r\n\r\n      StorageService.set('user', userPayload);\r\n      StorageService.set('token', token);\r\n\r\n      commit('AUTH_SUCCESS', { user: userPayload, token });\r\n      return response;\r\n    } catch (error) {\r\n      commit('AUTH_ERROR');\r\n      StorageService.remove('user');\r\n      StorageService.remove('token');\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async login({ commit }, userData) {\r\n    commit('SET_STATUS', 'loading');\r\n    try {\r\n      const response = await ApiService.login(userData);\r\n      const { id, name, email, role, token } = response.data;\r\n\r\n      if (!token || !id) throw new Error('Invalid login response');\r\n\r\n      const userPayload = { id, name, email, role };\r\n\r\n      StorageService.set('user', userPayload);\r\n      StorageService.set('token', token);\r\n\r\n      commit('AUTH_SUCCESS', { user: userPayload, token });\r\n      return response;\r\n    } catch (error) {\r\n      commit('AUTH_ERROR');\r\n      StorageService.remove('user');\r\n      StorageService.remove('token');\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  logout({ commit }) {\r\n    commit('LOGOUT');\r\n    StorageService.remove('user');\r\n    StorageService.remove('token');\r\n  },\r\n};\r\n\r\nconst mutations = {\r\n  SET_STATUS(state, status) {\r\n    state.status = status;\r\n  },\r\n  AUTH_SUCCESS(state, { user, token }) {\r\n    state.status = 'success';\r\n    state.user = user;\r\n    state.token = token;\r\n  },\r\n  AUTH_ERROR(state) {\r\n    state.status = 'error';\r\n    state.user = null;\r\n    state.token = null;\r\n  },\r\n  LOGOUT(state) {\r\n    state.status = 'idle';\r\n    state.user = null;\r\n    state.token = null;\r\n  },\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n};\r\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,cAAc,MAAM,2BAA2B;;AAEtD;AACA,MAAMC,IAAI,GAAGD,cAAc,CAACE,GAAG,CAAC,MAAM,CAAC;AACvC,MAAMC,KAAK,GAAGH,cAAc,CAACE,GAAG,CAAC,OAAO,CAAC;AAEzC,MAAME,KAAK,GAAG;EACZH,IAAI,EAAEA,IAAI;EACVE,KAAK,EAAEA,KAAK;EACZE,MAAM,EAAE,MAAM,CAAE;AAClB,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAEH,KAAK,IAAI,CAAC,CAACA,KAAK,CAACD,KAAK;EAClCK,OAAO,EAAEJ,KAAK,IAAIA,KAAK,CAACH,IAAI,IAAIG,KAAK,CAACH,IAAI,CAACQ,IAAI,KAAK,OAAO;EAC3DC,UAAU,EAAEN,KAAK,IAAIA,KAAK,CAACC,MAAM;EACjCM,WAAW,EAAEP,KAAK,IAAIA,KAAK,CAACH;AAC9B,CAAC;AAED,MAAMW,OAAO,GAAG;EACd,MAAMC,QAAQA,CAAC;IAAEC;EAAO,CAAC,EAAEC,QAAQ,EAAE;IACnCD,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC;IAC/B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMjB,UAAU,CAACc,QAAQ,CAACE,QAAQ,CAAC;MACpD,MAAM;QAAEE,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEV,IAAI;QAAEN;MAAM,CAAC,GAAGa,QAAQ,CAACI,IAAI;MAEtD,IAAI,CAACjB,KAAK,IAAI,CAACc,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,+BAA+B,CAAC;MAEnE,MAAMC,WAAW,GAAG;QAAEL,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEV;MAAK,CAAC;MAE7CT,cAAc,CAACuB,GAAG,CAAC,MAAM,EAAED,WAAW,CAAC;MACvCtB,cAAc,CAACuB,GAAG,CAAC,OAAO,EAAEpB,KAAK,CAAC;MAElCW,MAAM,CAAC,cAAc,EAAE;QAAEb,IAAI,EAAEqB,WAAW;QAAEnB;MAAM,CAAC,CAAC;MACpD,OAAOa,QAAQ;IACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdV,MAAM,CAAC,YAAY,CAAC;MACpBd,cAAc,CAACyB,MAAM,CAAC,MAAM,CAAC;MAC7BzB,cAAc,CAACyB,MAAM,CAAC,OAAO,CAAC;MAC9B,MAAMD,KAAK;IACb;EACF,CAAC;EAED,MAAME,KAAKA,CAAC;IAAEZ;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAChCD,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC;IAC/B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMjB,UAAU,CAAC2B,KAAK,CAACX,QAAQ,CAAC;MACjD,MAAM;QAAEE,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEV,IAAI;QAAEN;MAAM,CAAC,GAAGa,QAAQ,CAACI,IAAI;MAEtD,IAAI,CAACjB,KAAK,IAAI,CAACc,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;MAE5D,MAAMC,WAAW,GAAG;QAAEL,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEV;MAAK,CAAC;MAE7CT,cAAc,CAACuB,GAAG,CAAC,MAAM,EAAED,WAAW,CAAC;MACvCtB,cAAc,CAACuB,GAAG,CAAC,OAAO,EAAEpB,KAAK,CAAC;MAElCW,MAAM,CAAC,cAAc,EAAE;QAAEb,IAAI,EAAEqB,WAAW;QAAEnB;MAAM,CAAC,CAAC;MACpD,OAAOa,QAAQ;IACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdV,MAAM,CAAC,YAAY,CAAC;MACpBd,cAAc,CAACyB,MAAM,CAAC,MAAM,CAAC;MAC7BzB,cAAc,CAACyB,MAAM,CAAC,OAAO,CAAC;MAC9B,MAAMD,KAAK;IACb;EACF,CAAC;EAEDG,MAAMA,CAAC;IAAEb;EAAO,CAAC,EAAE;IACjBA,MAAM,CAAC,QAAQ,CAAC;IAChBd,cAAc,CAACyB,MAAM,CAAC,MAAM,CAAC;IAC7BzB,cAAc,CAACyB,MAAM,CAAC,OAAO,CAAC;EAChC;AACF,CAAC;AAED,MAAMG,SAAS,GAAG;EAChBC,UAAUA,CAACzB,KAAK,EAAEC,MAAM,EAAE;IACxBD,KAAK,CAACC,MAAM,GAAGA,MAAM;EACvB,CAAC;EACDyB,YAAYA,CAAC1B,KAAK,EAAE;IAAEH,IAAI;IAAEE;EAAM,CAAC,EAAE;IACnCC,KAAK,CAACC,MAAM,GAAG,SAAS;IACxBD,KAAK,CAACH,IAAI,GAAGA,IAAI;IACjBG,KAAK,CAACD,KAAK,GAAGA,KAAK;EACrB,CAAC;EACD4B,UAAUA,CAAC3B,KAAK,EAAE;IAChBA,KAAK,CAACC,MAAM,GAAG,OAAO;IACtBD,KAAK,CAACH,IAAI,GAAG,IAAI;IACjBG,KAAK,CAACD,KAAK,GAAG,IAAI;EACpB,CAAC;EACD6B,MAAMA,CAAC5B,KAAK,EAAE;IACZA,KAAK,CAACC,MAAM,GAAG,MAAM;IACrBD,KAAK,CAACH,IAAI,GAAG,IAAI;IACjBG,KAAK,CAACD,KAAK,GAAG,IAAI;EACpB;AACF,CAAC;AAED,eAAe;EACb8B,UAAU,EAAE,IAAI;EAChB7B,KAAK;EACLE,OAAO;EACPM,OAAO;EACPgB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}