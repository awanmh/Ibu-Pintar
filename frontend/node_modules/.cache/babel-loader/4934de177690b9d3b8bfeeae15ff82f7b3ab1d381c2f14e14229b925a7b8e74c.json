{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRoute } from 'vue-router';\n// HAPUS import ApiService\n// import ApiService from '@/services/ApiService'; \n// GANTI dengan import data dummy\nimport { dummyArticles } from '@/data/articles.js';\nimport { formatDate } from '@/utils/formatDate';\nexport default {\n  __name: 'ArticleDetailView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const article = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Ambil ID artikel dari parameter URL\n    // Kita ubah menjadi integer agar cocok dengan tipe data di dummy\n    const articleId = parseInt(route.params.id);\n\n    // Computed property untuk memformat tanggal\n    const formattedDate = computed(() => {\n      return article.value ? formatDate(article.value.date_posted) : '';\n    });\n\n    // Computed property untuk mengubah newline menjadi tag <p>\n    const formattedContent = computed(() => {\n      if (!article.value) return '';\n      return article.value.content.split(/\\n\\s*\\n/) // Pisahkan berdasarkan baris kosong\n      .map(paragraph => `<p>${paragraph.trim()}</p>`) // Bungkus setiap bagian dengan tag <p>\n      .join('');\n    });\n    onMounted(() => {\n      // --- LOGIKA DIAMBIL DARI DATA DUMMY, BUKAN API ---\n      const foundArticle = dummyArticles.find(a => a.id === articleId);\n      if (foundArticle) {\n        article.value = foundArticle;\n      } else {\n        error.value = \"Artikel tidak ditemukan.\";\n      }\n      loading.value = false;\n    });\n    const __returned__ = {\n      route,\n      article,\n      loading,\n      error,\n      articleId,\n      formattedDate,\n      formattedContent,\n      ref,\n      onMounted,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get dummyArticles() {\n        return dummyArticles;\n      },\n      get formatDate() {\n        return formatDate;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","dummyArticles","formatDate","route","article","loading","error","articleId","parseInt","params","id","formattedDate","value","date_posted","formattedContent","content","split","map","paragraph","trim","join","foundArticle","find","a"],"sources":["E:/ibuhamil/frontend/src/views/article/ArticleDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <!-- Tampilkan pesan Loading (meskipun sekarang sangat cepat) -->\r\n    <div v-if=\"loading\" class=\"state-message\">Memuat artikel...</div>\r\n    \r\n    <!-- Tampilkan pesan Error jika artikel tidak ditemukan di data dummy -->\r\n    <div v-if=\"error\" class=\"state-message error\">{{ error }}</div>\r\n    \r\n    <!-- Tampilkan konten jika artikel berhasil ditemukan -->\r\n    <article v-if=\"article\">\r\n      <div class=\"article-image-header\">\r\n        <img :src=\"article.image\" :alt=\"article.title\">\r\n      </div>\r\n\r\n      <h1 class=\"article-title\">{{ article.title }}</h1>\r\n      <p class=\"article-meta\">\r\n        Oleh <strong>{{ article.author.name }}</strong> dalam kategori <strong>{{ article.category.name }}</strong>\r\n        <br>\r\n        Dipublikasikan pada {{ formatDate(article.date_posted) }}\r\n      </p>\r\n      \r\n      <div class=\"article-content\" v-html=\"formattedContent\"></div>\r\n      \r\n      <router-link to=\"/articles\" class=\"back-link\">‚Üê Kembali ke Semua Artikel</router-link>\r\n    </article>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n// HAPUS import ApiService\r\n// import ApiService from '@/services/ApiService'; \r\n// GANTI dengan import data dummy\r\nimport { dummyArticles } from '@/data/articles.js'; \r\nimport { formatDate } from '@/utils/formatDate';\r\n\r\nconst route = useRoute();\r\nconst article = ref(null);\r\nconst loading = ref(true);\r\nconst error = ref(null);\r\n\r\n// Ambil ID artikel dari parameter URL\r\n// Kita ubah menjadi integer agar cocok dengan tipe data di dummy\r\nconst articleId = parseInt(route.params.id);\r\n\r\n// Computed property untuk memformat tanggal\r\nconst formattedDate = computed(() => {\r\n  return article.value ? formatDate(article.value.date_posted) : '';\r\n});\r\n\r\n// Computed property untuk mengubah newline menjadi tag <p>\r\nconst formattedContent = computed(() => {\r\n    if (!article.value) return '';\r\n    return article.value.content\r\n        .split(/\\n\\s*\\n/) // Pisahkan berdasarkan baris kosong\r\n        .map(paragraph => `<p>${paragraph.trim()}</p>`) // Bungkus setiap bagian dengan tag <p>\r\n        .join('');\r\n});\r\n\r\n\r\nonMounted(() => {\r\n  // --- LOGIKA DIAMBIL DARI DATA DUMMY, BUKAN API ---\r\n  const foundArticle = dummyArticles.find(a => a.id === articleId);\r\n\r\n  if (foundArticle) {\r\n    article.value = foundArticle;\r\n  } else {\r\n    error.value = \"Artikel tidak ditemukan.\";\r\n  }\r\n  \r\n  loading.value = false;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n  padding: 0 20px;\r\n}\r\n.state-message {\r\n  text-align: center;\r\n  padding: 60px;\r\n  font-size: 1.2em;\r\n  color: #888;\r\n}\r\n.error {\r\n  color: #c53030;\r\n  background-color: #fff5f5;\r\n  border-radius: 8px;\r\n}\r\n.article-image-header {\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n.article-image-header img {\r\n  width: 100%;\r\n  aspect-ratio: 16 / 9;\r\n  object-fit: cover;\r\n}\r\n.article-title {\r\n  font-size: 2.5em;\r\n  margin-bottom: 10px;\r\n  line-height: 1.2;\r\n}\r\n.article-meta {\r\n  color: #666;\r\n  font-style: italic;\r\n  margin-bottom: 30px;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 20px;\r\n}\r\n/* Style untuk konten yang menggunakan v-html */\r\n.article-content {\r\n  line-height: 1.8;\r\n  font-size: 1.1em;\r\n}\r\n.article-content :deep(p) {\r\n  margin-bottom: 1.5em; /* Jarak antar paragraf */\r\n}\r\n.back-link {\r\n  display: inline-block;\r\n  margin-top: 40px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  color: #ff69b4;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,UAAU,QAAQ,oBAAoB;;;;;;;IAE/C,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,OAAO,GAAGP,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMQ,OAAO,GAAGR,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMS,KAAK,GAAGT,GAAG,CAAC,IAAI,CAAC;;IAEvB;IACA;IACA,MAAMU,SAAS,GAAGC,QAAQ,CAACL,KAAK,CAACM,MAAM,CAACC,EAAE,CAAC;;IAE3C;IACA,MAAMC,aAAa,GAAGZ,QAAQ,CAAC,MAAM;MACnC,OAAOK,OAAO,CAACQ,KAAK,GAAGV,UAAU,CAACE,OAAO,CAACQ,KAAK,CAACC,WAAW,CAAC,GAAG,EAAE;IACnE,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAgB,GAAGf,QAAQ,CAAC,MAAM;MACpC,IAAI,CAACK,OAAO,CAACQ,KAAK,EAAE,OAAO,EAAE;MAC7B,OAAOR,OAAO,CAACQ,KAAK,CAACG,OAAO,CACvBC,KAAK,CAAC,SAAS,CAAC,CAAC;MAAA,CACjBC,GAAG,CAACC,SAAS,IAAI,MAAMA,SAAS,CAACC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;MAAA,CAC/CC,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;IAGFtB,SAAS,CAAC,MAAM;MACd;MACA,MAAMuB,YAAY,GAAGpB,aAAa,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKH,SAAS,CAAC;MAEhE,IAAIc,YAAY,EAAE;QAChBjB,OAAO,CAACQ,KAAK,GAAGS,YAAY;MAC9B,CAAC,MAAM;QACLf,KAAK,CAACM,KAAK,GAAG,0BAA0B;MAC1C;MAEAP,OAAO,CAACO,KAAK,GAAG,KAAK;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}