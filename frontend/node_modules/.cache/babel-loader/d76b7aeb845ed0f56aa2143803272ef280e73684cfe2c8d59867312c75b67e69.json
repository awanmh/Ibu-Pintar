{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport ApiService from '@/services/ApiService';\nimport AppButton from '@/components/common/AppButton.vue';\nimport { formatDate } from '@/utils/formatDate';\nexport default {\n  __name: 'QuestionDetailView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const question = ref(null);\n    const newAnswer = ref('');\n    const loading = ref(true);\n    const fetchQuestion = async () => {\n      try {\n        const response = await ApiService.getQuestionById(route.params.id);\n        question.value = response.data;\n      } catch (error) {\n        console.error(\"Gagal mengambil detail pertanyaan:\", error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const submitAnswer = async () => {\n      try {\n        const answerData = {\n          content: newAnswer.value,\n          user_id: 1 // Ganti dengan ID user yang login\n        };\n        await ApiService.createAnswer(route.params.id, answerData);\n        newAnswer.value = ''; // Kosongkan form\n        fetchQuestion(); // Muat ulang data untuk menampilkan jawaban baru\n      } catch (error) {\n        console.error(\"Gagal mengirim jawaban:\", error);\n      }\n    };\n    onMounted(fetchQuestion);\n    const __returned__ = {\n      route,\n      question,\n      newAnswer,\n      loading,\n      fetchQuestion,\n      submitAnswer,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get ApiService() {\n        return ApiService;\n      },\n      AppButton,\n      get formatDate() {\n        return formatDate;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","ApiService","AppButton","formatDate","route","question","newAnswer","loading","fetchQuestion","response","getQuestionById","params","id","value","data","error","console","submitAnswer","answerData","content","user_id","createAnswer"],"sources":["E:/ibuhamil/frontend/src/views/QuestionDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\" v-if=\"question\">\r\n    <div class=\"question-main\">\r\n      <h1>{{ question.title }}</h1>\r\n      <p class=\"meta\">Ditanyakan oleh <strong>{{ question.asker.name }}</strong> pada {{ formatDate(question.createdAt) }}</p>\r\n      <p class=\"content\">{{ question.content }}</p>\r\n    </div>\r\n\r\n    <div class=\"answers-section\">\r\n      <h2>Jawaban ({{ question.Answers.length }})</h2>\r\n      <div v-for=\"answer in question.Answers\" :key=\"answer.id\" class=\"answer-item\">\r\n        <p class=\"answer-content\">{{ answer.content }}</p>\r\n        <p class=\"meta\">Dijawab oleh <strong>{{ answer.author.name }}</strong> ({{ answer.author.role }}) pada {{ formatDate(answer.createdAt) }}</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"reply-form\">\r\n        <h3>Beri Jawaban</h3>\r\n        <form @submit.prevent=\"submitAnswer\">\r\n            <textarea v-model=\"newAnswer\" rows=\"5\" placeholder=\"Tulis jawaban Anda di sini...\"></textarea>\r\n            <AppButton type=\"submit\">Kirim Jawaban</AppButton>\r\n        </form>\r\n    </div>\r\n  </div>\r\n  <div v-else-if=\"loading\">Memuat...</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport ApiService from '@/services/ApiService';\r\nimport AppButton from '@/components/common/AppButton.vue';\r\nimport { formatDate } from '@/utils/formatDate';\r\n\r\nconst route = useRoute();\r\nconst question = ref(null);\r\nconst newAnswer = ref('');\r\nconst loading = ref(true);\r\n\r\nconst fetchQuestion = async () => {\r\n  try {\r\n    const response = await ApiService.getQuestionById(route.params.id);\r\n    question.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Gagal mengambil detail pertanyaan:\", error);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst submitAnswer = async () => {\r\n    try {\r\n        const answerData = {\r\n            content: newAnswer.value,\r\n            user_id: 1 // Ganti dengan ID user yang login\r\n        };\r\n        await ApiService.createAnswer(route.params.id, answerData);\r\n        newAnswer.value = ''; // Kosongkan form\r\n        fetchQuestion(); // Muat ulang data untuk menampilkan jawaban baru\r\n    } catch (error) {\r\n        console.error(\"Gagal mengirim jawaban:\", error);\r\n    }\r\n};\r\n\r\nonMounted(fetchQuestion);\r\n</script>\r\n\r\n<style scoped>\r\n.page-container { max-width: 800px; margin: 40px auto; padding: 0 20px; }\r\n.question-main { background: white; padding: 25px; border: 1px solid #eee; border-radius: 8px; margin-bottom: 30px; }\r\n.meta { font-size: 0.9em; color: #666; margin-top: 8px; }\r\n.content { line-height: 1.7; margin-top: 20px; }\r\n.answers-section h2 { margin-bottom: 20px; }\r\n.answer-item { border-bottom: 1px solid #eee; padding-bottom: 15px; margin-bottom: 15px; }\r\n.reply-form { margin-top: 40px; }\r\ntextarea { width: 100%; padding: 10px; border-radius: 8px; border: 1px solid #ccc; margin-bottom: 10px; }\r\n</style>"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,UAAU,QAAQ,oBAAoB;;;;;;;IAE/C,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,QAAQ,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMQ,SAAS,GAAGR,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMS,OAAO,GAAGT,GAAG,CAAC,IAAI,CAAC;IAEzB,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAACS,eAAe,CAACN,KAAK,CAACO,MAAM,CAACC,EAAE,CAAC;QAClEP,QAAQ,CAACQ,KAAK,GAAGJ,QAAQ,CAACK,IAAI;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,SAAS;QACRR,OAAO,CAACM,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,UAAU,GAAG;UACfC,OAAO,EAAEb,SAAS,CAACO,KAAK;UACxBO,OAAO,EAAE,CAAC,CAAC;QACf,CAAC;QACD,MAAMnB,UAAU,CAACoB,YAAY,CAACjB,KAAK,CAACO,MAAM,CAACC,EAAE,EAAEM,UAAU,CAAC;QAC1DZ,SAAS,CAACO,KAAK,GAAG,EAAE,CAAC,CAAC;QACtBL,aAAa,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDhB,SAAS,CAACS,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}