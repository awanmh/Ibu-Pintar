{"ast":null,"code":"// src/services/ApiService.js\nimport axios from 'axios';\nimport store from '@/store';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 10000\n});\n\n// === Interceptor untuk menambahkan token ===\napiClient.interceptors.request.use(config => {\n  const token = store.state.auth.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// === Auth ===\nconst register = userData => apiClient.post('/auth/register', userData);\nconst login = userData => apiClient.post('/auth/login', userData);\nconst getMe = () => apiClient.get('/auth/me');\n\n// === Artikel ===\nconst getArticles = () => apiClient.get('/articles');\nconst getArticle = id => apiClient.get(`/articles/${id}`);\nconst createArticle = data => apiClient.post('/articles', data);\nconst updateArticle = (id, data) => apiClient.put(`/articles/${id}`, data);\nconst deleteArticle = id => apiClient.delete(`/articles/${id}`);\n\n// === Upload Gambar ===\nconst uploadImage = formData => apiClient.post('/upload', formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\n// === Kategori ===\nconst getCategories = () => apiClient.get('/categories');\n\n// === Forum Tanya Bidan ===\nconst getAllQuestions = () => apiClient.get('/tanya-bidan');\nconst getQuestionById = id => apiClient.get(`/tanya-bidan/${id}`);\nconst createQuestion = data => apiClient.post('/tanya-bidan', data);\nconst createAnswer = (questionId, answerData) => apiClient.post(`/tanya-bidan/${questionId}/answers`, answerData);\nconst deleteQuestion = id => apiClient.delete(`/tanya-bidan/${id}`);\n\n// === Reservasi ===\nconst submitReservation = data => apiClient.post('/reservations', data);\nconst getReservations = () => apiClient.get('/reservations');\nconst updateReservation = (id, data) => apiClient.put(`/reservations/${id}`, data);\n\n// === Treatment ===\nconst getAllTreatments = () => apiClient.get('/treatments');\nconst getTreatmentById = id => apiClient.get(`/treatments/${id}`);\nconst createTreatment = data => apiClient.post('/treatments', data);\nconst updateTreatment = (id, data) => apiClient.put(`/treatments/${id}`, data);\nconst deleteTreatment = id => apiClient.delete(`/treatments/${id}`);\n\n// === Export Semua API ===\nexport default {\n  register,\n  login,\n  getMe,\n  getArticles,\n  getArticle,\n  createArticle,\n  updateArticle,\n  deleteArticle,\n  uploadImage,\n  getCategories,\n  getAllQuestions,\n  getQuestionById,\n  createQuestion,\n  createAnswer,\n  deleteQuestion,\n  submitReservation,\n  getReservations,\n  updateReservation,\n  getAllTreatments,\n  getTreatmentById,\n  createTreatment,\n  updateTreatment,\n  deleteTreatment\n};","map":{"version":3,"names":["axios","store","apiClient","create","baseURL","timeout","interceptors","request","use","config","token","state","auth","headers","Authorization","error","Promise","reject","register","userData","post","login","getMe","get","getArticles","getArticle","id","createArticle","data","updateArticle","put","deleteArticle","delete","uploadImage","formData","getCategories","getAllQuestions","getQuestionById","createQuestion","createAnswer","questionId","answerData","deleteQuestion","submitReservation","getReservations","updateReservation","getAllTreatments","getTreatmentById","createTreatment","updateTreatment","deleteTreatment"],"sources":["E:/ibuPintar/frontend/src/services/ApiService.js"],"sourcesContent":["// src/services/ApiService.js\r\nimport axios from 'axios';\r\nimport store from '@/store';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n});\r\n\r\n// === Interceptor untuk menambahkan token ===\r\napiClient.interceptors.request.use(\r\n  config => {\r\n    const token = store.state.auth.token;\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\n// === Auth ===\r\nconst register = userData => apiClient.post('/auth/register', userData);\r\nconst login = userData => apiClient.post('/auth/login', userData);\r\nconst getMe = () => apiClient.get('/auth/me');\r\n\r\n// === Artikel ===\r\nconst getArticles = () => apiClient.get('/articles');\r\nconst getArticle = id => apiClient.get(`/articles/${id}`);\r\nconst createArticle = data => apiClient.post('/articles', data);\r\nconst updateArticle = (id, data) => apiClient.put(`/articles/${id}`, data);\r\nconst deleteArticle = id => apiClient.delete(`/articles/${id}`);\r\n\r\n// === Upload Gambar ===\r\nconst uploadImage = formData =>\r\n  apiClient.post('/upload', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n\r\n// === Kategori ===\r\nconst getCategories = () => apiClient.get('/categories');\r\n\r\n// === Forum Tanya Bidan ===\r\nconst getAllQuestions = () => apiClient.get('/tanya-bidan');\r\nconst getQuestionById = id => apiClient.get(`/tanya-bidan/${id}`);\r\nconst createQuestion = data => apiClient.post('/tanya-bidan', data);\r\nconst createAnswer = (questionId, answerData) =>\r\n  apiClient.post(`/tanya-bidan/${questionId}/answers`, answerData);\r\nconst deleteQuestion = id => apiClient.delete(`/tanya-bidan/${id}`);\r\n\r\n// === Reservasi ===\r\nconst submitReservation = data => apiClient.post('/reservations', data);\r\nconst getReservations = () => apiClient.get('/reservations');\r\nconst updateReservation = (id, data) => apiClient.put(`/reservations/${id}`, data);\r\n\r\n// === Treatment ===\r\nconst getAllTreatments = () => apiClient.get('/treatments');\r\nconst getTreatmentById = id => apiClient.get(`/treatments/${id}`);\r\nconst createTreatment = data => apiClient.post('/treatments', data);\r\nconst updateTreatment = (id, data) => apiClient.put(`/treatments/${id}`, data);\r\nconst deleteTreatment = id => apiClient.delete(`/treatments/${id}`);\r\n\r\n// === Export Semua API ===\r\nexport default {\r\n  register,\r\n  login,\r\n  getMe,\r\n  getArticles,\r\n  getArticle,\r\n  createArticle,\r\n  updateArticle,\r\n  deleteArticle,\r\n  uploadImage,\r\n  getCategories,\r\n  getAllQuestions,\r\n  getQuestionById,\r\n  createQuestion,\r\n  createAnswer,\r\n  deleteQuestion,\r\n  submitReservation,\r\n  getReservations,\r\n  updateReservation,\r\n  getAllTreatments,\r\n  getTreatmentById,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGT,KAAK,CAACU,KAAK,CAACC,IAAI,CAACF,KAAK;EACpC,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAC/B,CAAC;;AAED;AACA,MAAMG,QAAQ,GAAGC,QAAQ,IAAIjB,SAAS,CAACkB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AACvE,MAAME,KAAK,GAAGF,QAAQ,IAAIjB,SAAS,CAACkB,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACjE,MAAMG,KAAK,GAAGA,CAAA,KAAMpB,SAAS,CAACqB,GAAG,CAAC,UAAU,CAAC;;AAE7C;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAMtB,SAAS,CAACqB,GAAG,CAAC,WAAW,CAAC;AACpD,MAAME,UAAU,GAAGC,EAAE,IAAIxB,SAAS,CAACqB,GAAG,CAAC,aAAaG,EAAE,EAAE,CAAC;AACzD,MAAMC,aAAa,GAAGC,IAAI,IAAI1B,SAAS,CAACkB,IAAI,CAAC,WAAW,EAAEQ,IAAI,CAAC;AAC/D,MAAMC,aAAa,GAAGA,CAACH,EAAE,EAAEE,IAAI,KAAK1B,SAAS,CAAC4B,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEE,IAAI,CAAC;AAC1E,MAAMG,aAAa,GAAGL,EAAE,IAAIxB,SAAS,CAAC8B,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;;AAE/D;AACA,MAAMO,WAAW,GAAGC,QAAQ,IAC1BhC,SAAS,CAACkB,IAAI,CAAC,SAAS,EAAEc,QAAQ,EAAE;EAClCrB,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEJ;AACA,MAAMsB,aAAa,GAAGA,CAAA,KAAMjC,SAAS,CAACqB,GAAG,CAAC,aAAa,CAAC;;AAExD;AACA,MAAMa,eAAe,GAAGA,CAAA,KAAMlC,SAAS,CAACqB,GAAG,CAAC,cAAc,CAAC;AAC3D,MAAMc,eAAe,GAAGX,EAAE,IAAIxB,SAAS,CAACqB,GAAG,CAAC,gBAAgBG,EAAE,EAAE,CAAC;AACjE,MAAMY,cAAc,GAAGV,IAAI,IAAI1B,SAAS,CAACkB,IAAI,CAAC,cAAc,EAAEQ,IAAI,CAAC;AACnE,MAAMW,YAAY,GAAGA,CAACC,UAAU,EAAEC,UAAU,KAC1CvC,SAAS,CAACkB,IAAI,CAAC,gBAAgBoB,UAAU,UAAU,EAAEC,UAAU,CAAC;AAClE,MAAMC,cAAc,GAAGhB,EAAE,IAAIxB,SAAS,CAAC8B,MAAM,CAAC,gBAAgBN,EAAE,EAAE,CAAC;;AAEnE;AACA,MAAMiB,iBAAiB,GAAGf,IAAI,IAAI1B,SAAS,CAACkB,IAAI,CAAC,eAAe,EAAEQ,IAAI,CAAC;AACvE,MAAMgB,eAAe,GAAGA,CAAA,KAAM1C,SAAS,CAACqB,GAAG,CAAC,eAAe,CAAC;AAC5D,MAAMsB,iBAAiB,GAAGA,CAACnB,EAAE,EAAEE,IAAI,KAAK1B,SAAS,CAAC4B,GAAG,CAAC,iBAAiBJ,EAAE,EAAE,EAAEE,IAAI,CAAC;;AAElF;AACA,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM5C,SAAS,CAACqB,GAAG,CAAC,aAAa,CAAC;AAC3D,MAAMwB,gBAAgB,GAAGrB,EAAE,IAAIxB,SAAS,CAACqB,GAAG,CAAC,eAAeG,EAAE,EAAE,CAAC;AACjE,MAAMsB,eAAe,GAAGpB,IAAI,IAAI1B,SAAS,CAACkB,IAAI,CAAC,aAAa,EAAEQ,IAAI,CAAC;AACnE,MAAMqB,eAAe,GAAGA,CAACvB,EAAE,EAAEE,IAAI,KAAK1B,SAAS,CAAC4B,GAAG,CAAC,eAAeJ,EAAE,EAAE,EAAEE,IAAI,CAAC;AAC9E,MAAMsB,eAAe,GAAGxB,EAAE,IAAIxB,SAAS,CAAC8B,MAAM,CAAC,eAAeN,EAAE,EAAE,CAAC;;AAEnE;AACA,eAAe;EACbR,QAAQ;EACRG,KAAK;EACLC,KAAK;EACLE,WAAW;EACXC,UAAU;EACVE,aAAa;EACbE,aAAa;EACbE,aAAa;EACbE,WAAW;EACXE,aAAa;EACbC,eAAe;EACfC,eAAe;EACfC,cAAc;EACdC,YAAY;EACZG,cAAc;EACdC,iBAAiB;EACjBC,eAAe;EACfC,iBAAiB;EACjBC,gBAAgB;EAChBC,gBAAgB;EAChBC,eAAe;EACfC,eAAe;EACfC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}